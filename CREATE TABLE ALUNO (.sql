CREATE TABLE ALUNO (
    ID_ALUNO NUMBER PRIMARY KEY,
    NOME VARCHAR2(100),
    DATA_NASCIMENTO DATE
);



CREATE TABLE DISCIPLINA (
    ID_DISCIPLINA NUMBER PRIMARY KEY,
    NOME VARCHAR2(100),
    DESCRICAO VARCHAR2(200),
    CARGA_HORARIA NUMBER
);




CREATE TABLE PROFESSOR (
    ID_PROFESSOR NUMBER PRIMARY KEY,
    NOME VARCHAR2(100)
);



CREATE TABLE MATRICULA (
    ID_MATRICULA NUMBER PRIMARY KEY,
    ID_ALUNO NUMBER,
    ID_DISCIPLINA NUMBER,
    CONSTRAINT FK_MATRICULA_ALUNO FOREIGN KEY (ID_ALUNO) REFERENCES ALUNO(ID_ALUNO),
    CONSTRAINT FK_MATRICULA_DISCIPLINA FOREIGN KEY (ID_DISCIPLINA) REFERENCES DISCIPLINA(ID_DISCIPLINA)
);


CREATE TABLE TURMA (
    ID_TURMA NUMBER PRIMARY KEY,
    ID_DISCIPLINA NUMBER,
    ID_PROFESSOR NUMBER,
    CONSTRAINT FK_TURMA_DISCIPLINA FOREIGN KEY (ID_DISCIPLINA) REFERENCES DISCIPLINA(ID_DISCIPLINA),
    CONSTRAINT FK_TURMA_PROFESSOR FOREIGN KEY (ID_PROFESSOR) REFERENCES PROFESSOR(ID_PROFESSOR)
);



CREATE OR REPLACE PACKAGE BODY PKG_ALUNO IS
    PROCEDURE EXCLUIR_ALUNO(P_ID_ALUNO IN NUMBER) IS
    BEGIN
        DELETE FROM MATRICULA WHERE ID_ALUNO = P_ID_ALUNO;
        DELETE FROM ALUNO WHERE ID_ALUNO = P_ID_ALUNO;
    END;



    CURSOR CUR_ALUNOS_MAIORES IS
    SELECT NOME, DATA_NASCIMENTO
    FROM ALUNO
    WHERE TRUNC(MONTHS_BETWEEN(SYSDATE, DATA_NASCIMENTO) / 12) > 18;




    CURSOR CUR_ALUNOS_POR_CURSO(P_ID_CURSO NUMBER) IS
    SELECT A.NOME
    FROM ALUNO A
    JOIN MATRICULA M ON A.ID_ALUNO = M.ID_ALUNO
    WHERE M.ID_DISCIPLINA = P_ID_CURSO;
END PKG_ALUNO;
/



CREATE OR REPLACE PACKAGE BODY PKG_DISCIPLINA IS
    PROCEDURE CADASTRAR_DISCIPLINA(
        P_NOME IN VARCHAR2,
        P_DESCRICAO IN VARCHAR2,
        P_CARGA_HORARIA IN NUMBER
    ) IS
    BEGIN
        INSERT INTO DISCIPLINA (ID_DISCIPLINA, NOME, DESCRICAO, CARGA_HORARIA)
        VALUES (SEQ_DISCIPLINA.NEXTVAL, P_NOME, P_DESCRICAO, P_CARGA_HORARIA);
    END;


    CURSOR CUR_TOTAL_ALUNOS_DISCIPLINA IS
    SELECT D.NOME, COUNT(M.ID_MATRICULA) AS TOTAL_ALUNOS
    FROM DISCIPLINA D
    JOIN MATRICULA M ON D.ID_DISCIPLINA = M.ID_DISCIPLINA
    GROUP BY D.NOME
    HAVING COUNT(M.ID_MATRICULA) > 10;


    CURSOR CUR_MEDIA_IDADE(P_ID_DISCIPLINA NUMBER) IS
    SELECT AVG(TRUNC(MONTHS_BETWEEN(SYSDATE, A.DATA_NASCIMENTO) / 12)) AS MEDIA_IDADE
    FROM ALUNO A
    JOIN MATRICULA M ON A.ID_ALUNO = M.ID_ALUNO
    WHERE M.ID_DISCIPLINA = P_ID_DISCIPLINA;




    PROCEDURE LISTAR_ALUNOS_DISCIPLINA(P_ID_DISCIPLINA IN NUMBER, P_CURSOR OUT SYS_REFCURSOR) IS
    BEGIN
        OPEN P_CURSOR FOR
        SELECT A.NOME
        FROM ALUNO A
        JOIN MATRICULA M ON A.ID_ALUNO = M.ID_ALUNO
        WHERE M.ID_DISCIPLINA = P_ID_DISCIPLINA;
    END;
END PKG_DISCIPLINA;
/






CREATE OR REPLACE PACKAGE BODY PKG_PROFESSOR IS
    CURSOR CUR_TOTAL_TURMAS_PROFESSOR IS
    SELECT P.NOME, COUNT(T.ID_TURMA) AS TOTAL_TURMAS
    FROM PROFESSOR P
    JOIN TURMA T ON P.ID_PROFESSOR = T.ID_PROFESSOR
    GROUP BY P.NOME
    HAVING COUNT(T.ID_TURMA) > 1;



    FUNCTION TOTAL_TURMAS_PROFESSOR(P_ID_PROFESSOR IN NUMBER) RETURN NUMBER IS
        V_TOTAL NUMBER;
    BEGIN
        SELECT COUNT(ID_TURMA) INTO V_TOTAL
        FROM TURMA
        WHERE ID_PROFESSOR = P_ID_PROFESSOR;
        RETURN V_TOTAL;
    END;





    FUNCTION PROFESSOR_DA_DISCIPLINA(P_ID_DISCIPLINA IN NUMBER) RETURN VARCHAR2 IS
        V_NOME_PROFESSOR VARCHAR2(100);
    BEGIN
        SELECT P.NOME INTO V_NOME_PROFESSOR
        FROM PROFESSOR P
        JOIN TURMA T ON P.ID_PROFESSOR = T.ID_PROFESSOR
        WHERE T.ID_DISCIPLINA = P_ID_DISCIPLINA;
        RETURN V_NOME_PROFESSOR;
    END;
END PKG_PROFESSOR;
/
